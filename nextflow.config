// CONFIGURATION FILE
manifest {
    author = 'H3ABioNet'
    description = 'H3ABioNet Variant Calling Workflow'
    mainScript = 'main.nf'
}

// PROCESS SETTINGS
process {
    // ALL PROCESSES
    stageInMode = 'symlink'
    stageOutMode = 'rsync'
    scratch = 'false'
    
    // PROCESS CONTAINERS AND RESOURCES
    withLabel:bwa {
        container = "$baseDir/containers/h3avarcall_bwa.sif"
    }
    withLabel:gatk {
        container = "$baseDir/containers/h3avarcall_gatk.sif"
    }
    withLabel:fastqc {
        container = "$baseDir/containers/h3avarcall_fastqc.sif"
    }
    withLabel:trimmomatic{
        container = "$baseDir/containers/h3avarcall_trimmomatic.sif"
    }
}

// SINGULARITY SETTINGS
singularity {
    enabled = true
    cacheDir = "$baseDir/containers"
    runOptions = "--bind /global:/global --cleanenv"
    autoMounts = true
}

// INPUT PARAMETERS
def checkOutPath() {
    if(params.out == null) {
        out_path = "$baseDir/workflow_results"
    } else{
        out_path = params.out
    }
}

// do.GetContainers | do.GenomeIndexing | do.QC | do.Trimming | do.Alignment   

// WORKFLOW TRACING
def workflowTracing() {
    if(params.mode == null || params.help || params.mode == 'do.GetContainers' || params.mode == 'do.GenomeIndexing') {}
    else {    
        if(params.mode == 'do.QC') {
            dir = "1_QC"
        } else if(params.mode == 'do.Trimming') {
            dir = "2_Read_Trimming"
        } else if(params.mode == 'do.Alignment') {
            dir = "3_Read_Alignment"
        } else if(params.mode == 'do.VariantCalling') {
            dir = "4_Variant_Calling"
        } else if(params.mode == 'do.VariantFiltering') {
            dir = "5_Variant_Filtering"
        } else {
        }
        trace {
            enabled = true
            file = "${out_path}/$dir/workflow_report/h3avarcall_trace.txt"
        }
        timeline {
            enabled = true
            file = "${out_path}/$dir/workflow_report/h3avarcall_timeline.html"
        }
        report {
            enabled = true
            file = "${out_path}/$dir/workflow_report/h3avarcall_report.html"
        }
        dag {
            enabled = true
            file = "${out_path}/$dir/workflow_report/h3avarcall_workflow.dot"
        }
    }
}

// PIPELINE PROFILES
profiles {
    standard {
        executor = 'local'
        includeConfig "$baseDir/main.config"
        checkOutPath()
        workflowTracing()
    }
    slurm {
        executor = 'slurm'
        queue = 'batch'
        includeConfig "$baseDir/main.config"
        checkOutPath()
        workflowTracing()
    }
}
